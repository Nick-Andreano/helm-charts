{{- if .Values.statefulset.enabled -}}
# Source: iag/templates/statefulset.yaml
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name:  {{ include "iag.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "iag.labels" . | nindent 4 }}
spec:
  serviceName: "iag-service"
  selector:
    matchLabels:
      {{- include "iag.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "iag.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: ""
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - name: http
            containerPort: {{ .Values.service.port }}
            protocol: TCP
        {{- if .Values.resources }}
        resources:  {{- toYaml .Values.resources | nindent 10 }}
        {{- end }}
        {{- with .Values.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ .Values.persistentVolumeClaims.dataClaim.name }}
        namespace: {{ .Values.namespace }}
      spec:
        accessModes:
          {{- toYaml .Values.persistentVolumeClaims.dataClaim.accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistentVolumeClaims.dataClaim.storage }}
        storageClassName: {{ .Values.persistentVolumeClaims.dataClaim.storageClassName }}
    - metadata:
        name: {{ .Values.persistentVolumeClaims.codeClaim.name }}
        namespace: {{ .Values.namespace }}
      spec:
        accessModes:
          {{- toYaml .Values.persistentVolumeClaims.codeClaim.accessModes | nindent 10 }}
        resources:
          requests:
            storage: {{ .Values.persistentVolumeClaims.codeClaim.storage }}
        storageClassName: {{ .Values.persistentVolumeClaims.codeClaim.storageClassName }}
{{- end }}